'https://editor.plantuml.com/
'Communication Diagram 2 - Конфигуриране и изпълнение чрез TestimizeEngine


@startuml

' === Визуални настройки ===
skinparam shadowing false
skinparam roundcorner 0
skinparam nodesep 60
skinparam ranksep 10
left to right direction

' === Участници с "име : Клас" ===
rectangle "<u>client : Client</u>" as client
rectangle "<u>engine : TestimizeEngine</u>" as engine
rectangle "<u>inputBuilder : TestimizeInputBuilder</u>" as inputBuilder
rectangle "<u>paramBuilder : ParameterBuilder<T></u>" as paramBuilder
rectangle "<u>valueBuilder : TestValueBuilder<T></u>" as valueBuilder
rectangle "<u>settings : PreciseTestEngineSettings</u>" as settings
rectangle "<u>builder : TestSuiteBuilder</u>" as builder
rectangle "<u>generator : HybridArtificialBeeColonyTestCaseGenerator</u>" as generator
rectangle "<u>outputGenerator : NUnitTestCaseOutputGenerator</u>" as outputGenerator

' === Конфигурация с делегати ===
client --> engine : 1. Configure(parametersLambda, settingsLambda)
engine --> inputBuilder : 1.1 new TestimizeInputBuilder()
inputBuilder --> paramBuilder : 1.2 AddText(...) → new ParameterBuilder<T>
paramBuilder --> valueBuilder : 1.3 Valid("admin")
valueBuilder --> paramBuilder : 1.4 WithExpectedMessage("valid input")
engine --> settings : 1.5 Apply config overrides
engine --> builder : 1.6 new TestSuiteBuilder(...)

' === Генерация чрез DI и ABC алгоритъм ===
client --> builder : 2. Generate()
builder --> settings : 2.1 get.ABCSettings
builder --> generator : 2.2 GenerateTestCases(parameters)
generator --> generator : 2.2.1 RunABCAlgorithm()
generator --> outputGenerator : 2.2.2 GenerateOutput(...)
outputGenerator --> generator : 2.2.3 return (prints + clipboard)
generator --> builder : 2.3 return HashSet<TestCase>
builder --> client : 2.4 return List<TestCase>

@enduml